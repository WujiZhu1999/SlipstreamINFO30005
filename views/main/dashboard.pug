extends ../navbar

block content
    
        div(class="top" )
            h2 Hi #{userName}! Welcome to the Dashboard！
            br
        div(class="leida" style="width:99%;text-align:center")
            h2 Personal Record
            canvas(id="radarChart")
        hr
        div(class="xiantu" style="width:99%;text-align:center")
            h2 Historical Record for last 4 weeks
            canvas(id="lineChart")
        hr
        div(class="rankItem" style="width:99%;")

            p #{tip["body"]}
        hr
        div(class="main")
            //-
                div(class="left")
                    div(class="desLeft")
                        div 
                            span Energy Saved
                            span #{(user.data.energySaved).toFixed(3)}KJ！
                        div 
                            span Carbon Saved
                            span #{(user.data.carbonSaved/1000).toFixed(3)}KG！
                        div This Weeks Streak!
                            span #{user.data.streak} Days！
                    div(class="desImg") 
                    div(class="desRight")   
                        div 
                           span Safety tip of the day 
                        div 
                            span Total Distance Cycled
                            span #{(user.data.totalDistance/1000).toFixed(3)}KM !
            div(class="right")
                div(class="ranksWrap")
                    div(class="ranks")
                        h3(class="rankTitle") Leaderboard
                        div(class="rankList")
                            - for (var i=0,l=leaderboard.length;i<l;i++)
                                div(class="rankItem")
                                    div(class="rankNumber") #{i + 1}.
                                    div(class="rankDes")
                                        a(href= "/users/" + leaderboard[i].userName + "/" style="float:right;") #{leaderboard[i].name}
                                        span #{(leaderboard[i].data.totalDistance/1000).toFixed(2)}KM Cycled
                                        span #{(leaderboard[i].data.carbonSaved/1000).toFixed(2)}KG Carbon Saved
        div(class="infoHolder" id="infoHolder" style="display:none")
            p #{(user.data.energySaved).toFixed(3)}
            p #{(user.data.totalDistance/1000).toFixed(3)}
            p #{(routeAmount)}
            p #{(user.data.totalDistance/1000/routeAmount).toFixed(3)}
            p #{(routeAmount/routeAmount_A).toFixed(3)}
            p #{distance_A[0]*(1/1000)}
            p #{distance_A[1]*(1/1000)}
            p #{distance_A[2]*(1/1000)}
            p #{distance_A[3]*(1/1000)}
            p #{route_A[0]}
            p #{route_A[1]}
            p #{route_A[2]}
            p #{route_A[3]}
        script(src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0").
        script.
            //radar
            var ctxR = document.getElementById("radarChart").getContext('2d');
            var a = (Math.min(document.getElementById("infoHolder").childNodes[0].innerHTML,500000)/500000*100).toFixed(3);
            var b = (Math.min(document.getElementById("infoHolder").childNodes[1].innerHTML,400)/400*100).toFixed(3);
            var c = (Math.min(document.getElementById("infoHolder").childNodes[2].innerHTML,200)/200*100).toFixed(3);
            var d = (Math.min(document.getElementById("infoHolder").childNodes[3].innerHTML,10)/10*100).toFixed(3);
            var e = (document.getElementById("infoHolder").childNodes[4].innerHTML *100).toFixed(3);
            var myRadarChart = new Chart(ctxR, {
                type: 'radar',
                data: {
                    labels: ["EnergySaved "+(a*5000), "TotalDistance "+(b*40/10).toFixed(3), "RouteAmount "+(c*10/5), "AverageDistance "+(d/10).toFixed(3), "Success Rate "+e +"%"],
                    datasets: [{
                        label: "Your Personal Record",
                        data: [a,b,c,d,e],
                        backgroundColor: ['rgba(69, 199, 112, .2)',],
                        borderColor: ['rgba(55, 119, 80, .7)',],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    scale: {
                        angleLines: {
                            display: false
                        },
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 100
                        }
                    }
                }

            });
        script.
            var aao = document.getElementById("infoHolder").childNodes[5].innerHTML;
            var bbo = document.getElementById("infoHolder").childNodes[6].innerHTML;
            var cco = document.getElementById("infoHolder").childNodes[7].innerHTML;
            var ddo = document.getElementById("infoHolder").childNodes[8].innerHTML;

            var aax = document.getElementById("infoHolder").childNodes[9].innerHTML;
            var bbx = document.getElementById("infoHolder").childNodes[10].innerHTML;
            var ccx = document.getElementById("infoHolder").childNodes[11].innerHTML;
            var ddx = document.getElementById("infoHolder").childNodes[12].innerHTML;
            
            var ctxL = document.getElementById("lineChart").getContext('2d');
            var myLineChart = new Chart(ctxL, {
                type: 'line',
                data: {
                    labels: ["3 week ago","2 week ago","1 week ago","within 1 week"],
                    datasets: [{
                        label: "Total Distance",
                        data: [aao,bbo,cco,ddo],
                        backgroundColor: ['rgba(69, 199, 112, .2)',],
                        borderColor: ['rgba(55, 119, 80, .7)',],
                        borderWidth: 2
                    },
                    {
                        label: "Average Distance per Route",
                        data: [(aao/aax).toFixed(2),(bbo/bbx).toFixed(2),(cco/ccx).toFixed(2),(ddo/ddx).toFixed(2)],
                        backgroundColor: ['rgba(68, 68, 68, .2)',],
                        borderColor: ['rgba(0，0，0, .7)',],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true
                }
            });